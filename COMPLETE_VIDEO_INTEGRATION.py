#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–∏–¥–µ–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–ª–∞–Ω–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
"""

import os
import sys
import django

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
django.setup()

from apps.workouts.models import VideoClip, Exercise
from apps.content.models import MediaAsset
from django.db import transaction

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è R2
R2_PUBLIC_BASE = 'https://pub-d620683e68bf49abb422f1bc95810ff7.r2.dev'

def create_motivation_video_clips():
    """
    –°–æ–∑–¥–∞–µ—Ç VideoClip –∑–∞–ø–∏—Å–∏ –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ –∏–∑ CSV –¥–∞–Ω–Ω—ã—Ö
    """
    print("\nüé¨ –°–æ–∑–¥–∞–Ω–∏–µ VideoClip –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ...")
    
    # Intro –≤–∏–¥–µ–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è (–¥–Ω–∏ 1-105)
    intro_videos = []
    for day in range(1, 106):  # 15 –Ω–µ–¥–µ–ª—å * 7 –¥–Ω–µ–π
        for archetype in ['bro', 'sergeant', 'intellectual']:
            intro_videos.append({
                'type': 'intro',
                'archetype': archetype,
                'day_number': day,
                'url': f'{R2_PUBLIC_BASE}/videos/motivation/intro_{archetype}_day{day:02d}.mp4',
                'duration_seconds': 30
            })
    
    # Weekly –≤–∏–¥–µ–æ
    weekly_videos = []
    for week in range(1, 9):  # 8 –Ω–µ–¥–µ–ª—å
        for archetype in ['bro', 'sergeant', 'intellectual']:
            weekly_videos.append({
                'type': 'weekly',
                'archetype': archetype,
                'week_number': week,
                'url': f'{R2_PUBLIC_BASE}/videos/weekly/weekly_{archetype}_week{week}.mp4',
                'duration_seconds': 180
            })
    
    # Progress –≤–∏–¥–µ–æ
    progress_videos = []
    for progress_num in range(1, 4):  # 3 –ø—Ä–æ–≥—Ä–µ—Å—Å-–≤–∏–¥–µ–æ
        for archetype in ['bro', 'sergeant', 'intellectual']:
            progress_videos.append({
                'type': 'progress',
                'archetype': archetype,
                'progress_number': progress_num,
                'url': f'{R2_PUBLIC_BASE}/videos/progress/progress_{archetype}_{progress_num}.mp4',
                'duration_seconds': 120
            })
    
    # Final –≤–∏–¥–µ–æ
    final_videos = []
    for archetype in ['bro', 'sergeant', 'intellectual']:
        final_videos.append({
            'type': 'final',
            'archetype': archetype,
            'url': f'{R2_PUBLIC_BASE}/videos/final/final_{archetype}.mp4',
            'duration_seconds': 240
        })
    
    all_videos = intro_videos + weekly_videos + progress_videos + final_videos
    
    created = 0
    with transaction.atomic():
        for video_data in all_videos:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
            if video_data['type'] == 'intro':
                reminder_text = f"day_{video_data['day_number']}"
            elif video_data['type'] == 'weekly':
                reminder_text = f"week_{video_data['week_number']}"
            elif video_data['type'] == 'progress':
                reminder_text = f"progress_{video_data['progress_number']}"
            else:  # final
                reminder_text = "completion"
            
            video_clip, created_flag = VideoClip.objects.get_or_create(
                exercise=None,  # –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏
                type=video_data['type'],
                archetype=video_data['archetype'],
                model_name='motivation',
                reminder_text=reminder_text,
                defaults={
                    'url': video_data['url'],
                    'duration_seconds': video_data['duration_seconds'],
                    'is_active': True
                }
            )
            
            if created_flag:
                created += 1
                if created % 20 == 0:
                    print(f"  –°–æ–∑–¥–∞–Ω–æ: {created} –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ...")
    
    print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–æ {created} –Ω–æ–≤—ã—Ö –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö VideoClip")
    return created

def create_media_assets():
    """
    –°–æ–∑–¥–∞–µ—Ç MediaAsset –∑–∞–ø–∏—Å–∏ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–∏–¥–µ–æ
    """
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ MediaAsset –∑–∞–ø–∏—Å–µ–π...")
    
    media_assets_data = []
    
    # Intro –≤–∏–¥–µ–æ
    for day in range(1, 106):
        for archetype in ['bro', 'sergeant', 'intellectual']:
            media_assets_data.append({
                'file_name': f'intro_{archetype}_day{day:02d}.mp4',
                'file_url': f'{R2_PUBLIC_BASE}/videos/motivation/intro_{archetype}_day{day:02d}.mp4',
                'asset_type': 'video',
                'category': 'motivation_intro',
                'archetype': archetype,
                'tags': ['intro', f'day{day}'],
                'file_size': 5 * 1024 * 1024  # 5MB average
            })
    
    # Weekly –≤–∏–¥–µ–æ
    for week in range(1, 9):
        for archetype in ['bro', 'sergeant', 'intellectual']:
            media_assets_data.append({
                'file_name': f'weekly_{archetype}_week{week}.mp4',
                'file_url': f'{R2_PUBLIC_BASE}/videos/weekly/weekly_{archetype}_week{week}.mp4',
                'asset_type': 'video',
                'category': 'motivation_weekly',
                'archetype': archetype,
                'tags': ['weekly', f'week{week}'],
                'file_size': 50 * 1024 * 1024  # 50MB average
            })
    
    # Progress –≤–∏–¥–µ–æ
    for progress_num in range(1, 4):
        for archetype in ['bro', 'sergeant', 'intellectual']:
            media_assets_data.append({
                'file_name': f'progress_{archetype}_{progress_num}.mp4',
                'file_url': f'{R2_PUBLIC_BASE}/videos/progress/progress_{archetype}_{progress_num}.mp4',
                'asset_type': 'video',
                'category': 'motivation_progress',
                'archetype': archetype,
                'tags': ['progress', f'milestone{progress_num}'],
                'file_size': 40 * 1024 * 1024  # 40MB average
            })
    
    # Final –≤–∏–¥–µ–æ
    for archetype in ['bro', 'sergeant', 'intellectual']:
        media_assets_data.append({
            'file_name': f'final_{archetype}.mp4',
            'file_url': f'{R2_PUBLIC_BASE}/videos/final/final_{archetype}.mp4',
            'asset_type': 'video',
            'category': 'motivation_final',
            'archetype': archetype,
            'tags': ['final', 'completion'],
            'file_size': 60 * 1024 * 1024  # 60MB average
        })
    
    created = 0
    with transaction.atomic():
        for asset_data in media_assets_data:
            asset, created_flag = MediaAsset.objects.get_or_create(
                file_name=asset_data['file_name'],
                defaults={
                    'file_url': asset_data['file_url'],
                    'cdn_url': asset_data['file_url'],
                    'file_size': asset_data['file_size'],
                    'asset_type': asset_data['asset_type'],
                    'category': asset_data['category'],
                    'archetype': asset_data['archetype'],
                    'tags': asset_data['tags']
                }
            )
            if created_flag:
                created += 1
                if created % 30 == 0:
                    print(f"  –°–æ–∑–¥–∞–Ω–æ: {created} MediaAsset...")
    
    print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–æ {created} –Ω–æ–≤—ã—Ö MediaAsset")
    return created

def update_media_asset_categories():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ MediaAsset –¥–ª—è –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
    """
    print("\nüè∑Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π MediaAsset...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –º–æ–¥–µ–ª—å (—ç—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ –º–∏–≥—Ä–∞—Ü–∏–∏)
    new_categories = [
        ('motivation_intro', 'Daily Intro'),
        ('motivation_progress', 'Progress Milestone'),
    ]
    
    print("  üìù –ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –º–æ–¥–µ–ª—å MediaAsset:")
    for category, description in new_categories:
        print(f"    - {category}: {description}")
    
    return True

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    """
    print("üöÄ –ü–û–õ–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –í–ò–î–ï–û –í –ü–õ–ê–ù –¢–†–ï–ù–ò–†–û–í–û–ö")
    print("=" * 55)
    
    print(f"\nüìä –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤–∏–¥–µ–æ:")
    print(f"  üé¨ Intro videos: 315 —Ñ–∞–π–ª–æ–≤ (105 –¥–Ω–µ–π √ó 3 –∞—Ä—Ö–µ—Ç–∏–ø–∞)")
    print(f"  üìÖ Weekly videos: 18 —Ñ–∞–π–ª–æ–≤ (6 –Ω–µ–¥–µ–ª—å √ó 3 –∞—Ä—Ö–µ—Ç–∏–ø–∞)")  
    print(f"  üìà Progress videos: 9 —Ñ–∞–π–ª–æ–≤ (3 —ç—Ç–∞–ø–∞ √ó 3 –∞—Ä—Ö–µ—Ç–∏–ø–∞)")
    print(f"  üèÜ Final videos: 3 —Ñ–∞–π–ª–∞ (3 –∞—Ä—Ö–µ—Ç–∏–ø–∞)")
    print(f"  üìÅ Total motivation videos: 345 —Ñ–∞–π–ª–æ–≤")
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º VideoClip –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
        video_clips_created = create_motivation_video_clips()
        
        # 2. –°–æ–∑–¥–∞–µ–º MediaAsset –∑–∞–ø–∏—Å–∏
        media_assets_created = create_media_assets()
        
        # 3. –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        update_media_asset_categories()
        
        print("\n" + "=" * 55)
        print("‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print(f"\nüìä –°–æ–∑–¥–∞–Ω–æ:")
        print(f"   üé¨ VideoClip: {video_clips_created}")
        print(f"   üìÅ MediaAsset: {media_assets_created}")
        
        print(f"\nüéØ –ß—Ç–æ —ç—Ç–æ –¥–∞–µ—Ç:")
        print("   üé¨ Intro –≤–∏–¥–µ–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è")
        print("   üìÖ Weekly –≤–∏–¥–µ–æ - –≤ –∫–æ–Ω—Ü–µ –Ω–µ–¥–µ–ª–∏ –∏ –¥–Ω–∏ –æ—Ç–¥—ã—Ö–∞")
        print("   üìà Progress –≤–∏–¥–µ–æ - –∫–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏")
        print("   üèÜ Final –≤–∏–¥–µ–æ - –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        
        print(f"\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –û–±–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å MediaAsset —Å –Ω–æ–≤—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
        print("2. –û–±–Ω–æ–≤–∏—Ç—å VideoPlaylistBuilder –¥–ª—è –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤")
        print("3. –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É progress –≤–∏–¥–µ–æ –≤ WorkoutPlan")
        print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π workflow")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()