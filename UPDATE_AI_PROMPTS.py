#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ AI –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ exercise_slug –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
"""

import os
import csv

def get_exercise_slugs_from_csv():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ exercise_slug –∏–∑ CSV —Ñ–∞–π–ª–∞"""
    csv_file = "/Users/alexbel/Desktop/AI Fitness Coach/media_lists/EXERCISES_271_VIDEOS.csv"
    
    slugs = []
    with open(csv_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        for row in reader:
            slug = row['exercise_slug'].strip()
            if slug and slug not in slugs:
                slugs.append(slug)
    
    return sorted(slugs)

def categorize_exercises(slugs):
    """–ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ —Ç–∏–ø–∞–º"""
    categories = {
        'warmup': [],
        'main_strength': [],
        'cardio': [],
        'core': [],
        'flexibility': []
    }
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
    warmup_keywords = ['warmup', 'gentle', 'light', 'marching', 'circles', 'rolls', 'swings']
    cardio_keywords = ['jumping', 'burpees', 'mountain', 'high_knees', 'butt_kicks', 'jacks']
    core_keywords = ['plank', 'abs', 'crunches', 'bicycle', 'russian', 'dead_bug', 'bird_dog']
    strength_keywords = ['push_ups', 'squats', 'lunges', 'pull_ups', 'deadlifts', 'rows']
    flexibility_keywords = ['stretch', 'pose', 'hold', 'release']
    
    for slug in slugs:
        slug_lower = slug.lower()
        
        if any(kw in slug_lower for kw in warmup_keywords):
            categories['warmup'].append(slug)
        elif any(kw in slug_lower for kw in core_keywords):
            categories['core'].append(slug)
        elif any(kw in slug_lower for kw in cardio_keywords):
            categories['cardio'].append(slug)
        elif any(kw in slug_lower for kw in strength_keywords):
            categories['main_strength'].append(slug)
        elif any(kw in slug_lower for kw in flexibility_keywords):
            categories['flexibility'].append(slug)
        else:
            # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ—Å–Ω–æ–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
            categories['main_strength'].append(slug)
    
    return categories

def update_prompt_file(prompt_file, new_exercise_list):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª –ø—Ä–æ–º–ø—Ç–∞ —Å –Ω–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π"""
    
    with open(prompt_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ù–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å exercise_slug
    old_line_start = "–í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —ç—Ç–∏ exercise_slug'–∏:"
    old_line_end = "deadlifts, pull-ups"
    
    # –ù–∞–π—Ç–∏ –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
    start_idx = content.find(old_line_start)
    if start_idx == -1:
        print(f"  ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å exercise_slug –≤ {prompt_file}")
        return False
    
    end_idx = content.find(old_line_end, start_idx)
    if end_idx == -1:
        print(f"  ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏ –≤ {prompt_file}")
        return False
    
    end_idx += len(old_line_end)
    
    # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    new_line = f"{old_line_start}\n{new_exercise_list}"
    
    # –ó–∞–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    new_content = content[:start_idx] + new_line + content[end_idx:]
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
    with open(prompt_file, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    return True

def main():
    print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï AI –ü–†–û–ú–ü–¢–û–í –° –ê–ö–¢–£–ê–õ–¨–ù–´–ú–ò EXERCISE_SLUG")
    print("=" * 55)
    
    # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    print("\nüìã –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ exercise_slug –∏–∑ CSV...")
    slugs = get_exercise_slugs_from_csv()
    print(f"  üìä –ù–∞–π–¥–µ–Ω–æ {len(slugs)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö exercise_slug")
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    print("\nüè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...")
    categories = categorize_exercises(slugs)
    
    for category, exercises in categories.items():
        print(f"  {category}: {len(exercises)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    
    # –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
    # –¢–æ–ø 30 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
    popular_exercises = (
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏–ª–æ–≤—ã–µ
        categories['main_strength'][:15] +
        # –ö–∞—Ä–¥–∏–æ
        categories['cardio'][:8] +
        # –ö–æ—Ä
        categories['core'][:5] +
        # –†–∞–∑–º–∏–Ω–∫–∞
        categories['warmup'][:2]
    )[:30]
    
    # –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
    all_exercises = slugs
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏
    popular_list = ", ".join(popular_exercises)
    
    # –î–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤ - —Ä–∞–∑–±–∏—Ç—å –ø–æ —Å—Ç—Ä–æ–∫–∞–º
    all_list_formatted = ""
    chunk_size = 8
    for i in range(0, len(all_exercises), chunk_size):
        chunk = all_exercises[i:i+chunk_size]
        all_list_formatted += ", ".join(chunk)
        if i + chunk_size < len(all_exercises):
            all_list_formatted += ",\n"
    
    print(f"\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤...")
    print(f"  üéØ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ (30): {len(popular_exercises)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    print(f"  üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫: {len(all_exercises)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    prompt_files = [
        "/Users/alexbel/Desktop/AI Fitness Coach/prompts/workout_plan_bro.txt",
        "/Users/alexbel/Desktop/AI Fitness Coach/prompts/workout_plan_sergeant.txt", 
        "/Users/alexbel/Desktop/AI Fitness Coach/prompts/workout_plan_intellectual.txt"
    ]
    
    print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç —Ñ–∞–π–ª–æ–≤...")
    
    for prompt_file in prompt_files:
        if os.path.exists(prompt_file):
            print(f"  üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {os.path.basename(prompt_file)}...")
            success = update_prompt_file(prompt_file, popular_list)
            if success:
                print(f"     ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
            else:
                print(f"     ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        else:
            print(f"  ‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {prompt_file}")
    
    # –°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª —Å –ø–æ–ª–Ω—ã–º —Å–ø–∏—Å–∫–æ–º –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    full_list_file = "/Users/alexbel/Desktop/AI Fitness Coach/FULL_EXERCISE_SLUGS.txt"
    with open(full_list_file, 'w', encoding='utf-8') as f:
        f.write("# –ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö EXERCISE_SLUG –î–õ–Ø AI –ü–†–û–ú–ü–¢–û–í\n")
        f.write(f"# –í—Å–µ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {len(all_exercises)}\n")
        f.write(f"# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ EXERCISES_271_VIDEOS.csv\n\n")
        
        f.write("## –ü–û–ü–£–õ–Ø–†–ù–´–ï –£–ü–†–ê–ñ–ù–ï–ù–ò–Ø (–î–õ–Ø –û–°–ù–û–í–ù–´–• –ü–†–û–ú–ü–¢–û–í):\n")
        f.write(popular_list + "\n\n")
        
        f.write("## –í–°–ï –£–ü–†–ê–ñ–ù–ï–ù–ò–Ø –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:\n\n")
        for category, exercises in categories.items():
            f.write(f"### {category.upper()}:\n")
            f.write(", ".join(exercises) + "\n\n")
        
        f.write("## –í–°–ï –£–ü–†–ê–ñ–ù–ï–ù–ò–Ø (–ê–õ–§–ê–í–ò–¢–ù–´–ô –ü–û–†–Ø–î–û–ö):\n")
        f.write(all_list_formatted)
    
    print(f"\nüìÑ –°–æ–∑–¥–∞–Ω —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª: FULL_EXERCISE_SLUGS.txt")
    
    print("\n" + "=" * 55)
    print("‚úÖ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–ú–ü–¢–û–í –ó–ê–í–ï–†–®–ï–ù–û!")
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   üéØ –í –ø—Ä–æ–º–ø—Ç–∞—Ö —Ç–µ–ø–µ—Ä—å: {len(popular_exercises)} –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    print(f"   üìö –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ: {len(all_exercises)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    print(f"   üìÅ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(prompt_files)}")
    
    print(f"\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç —Ñ–∞–π–ª—ã")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–ª–∞–Ω–æ–≤")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ AI –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—ã–µ exercise_slug")

if __name__ == "__main__":
    main()