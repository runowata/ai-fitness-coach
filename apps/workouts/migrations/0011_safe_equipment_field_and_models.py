# Generated by Django 5.0.6 on 2025-08-06 13:46

from django.db import connection, migrations, models


def safe_migration_operations(apps, schema_editor):
    """Database-agnostic safe migration operations"""
    db_vendor = connection.vendor
    
    with connection.cursor() as cursor:
        # Add equipment column to exercises if it doesn't exist
        try:
            if db_vendor == 'postgresql':
                cursor.execute("""
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_name = 'exercises' AND column_name = 'equipment'
                """)
                if not cursor.fetchone():
                    cursor.execute("ALTER TABLE exercises ADD COLUMN equipment varchar(50) DEFAULT 'bodyweight'")
            else:
                # For SQLite, we'll try to add and catch the error if exists
                try:
                    cursor.execute("ALTER TABLE exercises ADD COLUMN equipment varchar(50) DEFAULT 'bodyweight'")
                except Exception:
                    pass  # Column already exists
        except Exception:
            pass
            
        # Add is_placeholder column to video_clips if it doesn't exist  
        try:
            if db_vendor == 'postgresql':
                cursor.execute("""
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_name = 'video_clips' AND column_name = 'is_placeholder'
                """)
                if not cursor.fetchone():
                    cursor.execute("ALTER TABLE video_clips ADD COLUMN is_placeholder boolean DEFAULT false")
            else:
                try:
                    cursor.execute("ALTER TABLE video_clips ADD COLUMN is_placeholder boolean DEFAULT false")
                except Exception:
                    pass  # Column already exists
        except Exception:
            pass
            
        # Add ai_analysis column to workout_plans if it doesn't exist
        try:
            if db_vendor == 'postgresql':
                cursor.execute("""
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_name = 'workout_plans' AND column_name = 'ai_analysis'
                """)
                if not cursor.fetchone():
                    cursor.execute("ALTER TABLE workout_plans ADD COLUMN ai_analysis jsonb")
            else:
                try:
                    cursor.execute("ALTER TABLE workout_plans ADD COLUMN ai_analysis text")  # SQLite uses text for JSON
                except Exception:
                    pass  # Column already exists
        except Exception:
            pass
            
        # Create final_videos table if it doesn't exist
        try:
            if db_vendor == 'postgresql':
                cursor.execute("""
                    SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_name = 'final_videos'
                """)
                if not cursor.fetchone():
                    cursor.execute("""
                        CREATE TABLE final_videos (
                            arch varchar(3) PRIMARY KEY,
                            locale varchar(5) DEFAULT 'ru',
                            script text NOT NULL
                        )
                    """)
            else:
                # For SQLite, try to create and ignore if exists
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS final_videos (
                        arch varchar(3) PRIMARY KEY,
                        locale varchar(5) DEFAULT 'ru',
                        script text NOT NULL
                    )
                """)
        except Exception:
            pass
            
        # Create weekly_lessons table if it doesn't exist
        try:
            if db_vendor == 'postgresql':
                cursor.execute("""
                    SELECT table_name 
                    FROM information_schema.tables 
                    WHERE table_name = 'weekly_lessons'
                """)
                if not cursor.fetchone():
                    cursor.execute("""
                        CREATE TABLE weekly_lessons (
                            id bigserial PRIMARY KEY,
                            week smallint NOT NULL,
                            archetype varchar(3) NOT NULL,
                            locale varchar(5) DEFAULT 'ru',
                            title varchar(120) NOT NULL,
                            script text NOT NULL,
                            UNIQUE(week, archetype, locale)
                        )
                    """)
            else:
                # For SQLite, try to create and ignore if exists
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS weekly_lessons (
                        id integer PRIMARY KEY AUTOINCREMENT,
                        week smallint NOT NULL,
                        archetype varchar(3) NOT NULL,
                        locale varchar(5) DEFAULT 'ru',
                        title varchar(120) NOT NULL,
                        script text NOT NULL,
                        UNIQUE(week, archetype, locale)
                    )
                """)
        except Exception:
            pass


class Migration(migrations.Migration):

    dependencies = [
        ('workouts', '0010_weeklynotification'),
    ]

    operations = [
        # Safely create tables and add columns
        migrations.RunPython(
            safe_migration_operations,
            migrations.RunPython.noop
        ),
    ]
