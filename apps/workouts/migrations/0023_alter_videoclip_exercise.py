# Generated by Django 5.0.6 on 2025-08-11 18:52
# Modified to handle existing data safely

import django.db.models.deletion
from django.db import migrations, models


def clear_orphaned_exercise_ids(apps, schema_editor):
    """Clear exercise_id from VideoClips that would violate the new FK constraint"""
    VideoClip = apps.get_model('workouts', 'VideoClip')
    CSVExercise = apps.get_model('workouts', 'CSVExercise')
    
    # Get all CSVExercise IDs
    csv_exercise_ids = set(CSVExercise.objects.values_list('id', flat=True))
    
    # Clear exercise_id for VideoClips pointing to non-existent CSVExercise
    if csv_exercise_ids:
        orphaned = VideoClip.objects.exclude(exercise_id__in=csv_exercise_ids).exclude(exercise_id__isnull=True)
    else:
        # If no CSVExercise records exist, clear all exercise references
        orphaned = VideoClip.objects.exclude(exercise_id__isnull=True)
    
    count = orphaned.update(exercise_id=None)
    if count > 0:
        print(f"Cleared {count} orphaned VideoClip exercise references")

def reverse_clear(apps, schema_editor):
    """No-op reverse operation"""

class Migration(migrations.Migration):

    dependencies = [
        ('workouts', '0022_add_contextual_video_fields'),
    ]

    operations = [
        # First, clear any orphaned exercise references
        migrations.RunPython(clear_orphaned_exercise_ids, reverse_clear),
        
        # Then alter the field to point to CSVExercise
        migrations.AlterField(
            model_name='videoclip',
            name='exercise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_clips', to='workouts.csvexercise'),
        ),
    ]