# Generated by Django 5.0.6 on 2025-08-09 20:19

from django.db import migrations, models


def set_provider_for_existing_clips(apps, schema_editor):
    """Set provider='r2' for existing VideoClips with r2_file"""
    VideoClip = apps.get_model("workouts", "VideoClip")
    # Update all clips with r2_file to use r2 provider
    VideoClip.objects.filter(r2_file__isnull=False).exclude(r2_file='').update(provider='r2')


def reverse_set_provider(apps, schema_editor):
    """Reverse migration - no action needed"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('workouts', '0015_merge_state_only_and_0012'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='weeklylesson',
            options={'ordering': ['week']},
        ),
        # Safe removal of legacy constraint (may not exist in fresh DB)
        migrations.RunSQL(
            "ALTER TABLE weekly_lessons DROP CONSTRAINT IF EXISTS unique_weekly_lesson;",
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.RemoveIndex(
            model_name='videoclip',
            name='video_clips_exercis_cde9f7_idx',
        ),
        migrations.RemoveField(
            model_name='exercise',
            name='mistake_video_url',
        ),
        migrations.RemoveField(
            model_name='exercise',
            name='technique_video_url',
        ),
        migrations.AddField(
            model_name='exercise',
            name='equipment',
            field=models.CharField(default='bodyweight', help_text='Основной инвентарь: bodyweight | dumbbell | barbell …', max_length=50),
        ),
        migrations.AddField(
            model_name='exercise',
            name='poster_image',
            field=models.ImageField(blank=True, help_text='Poster image for video player', null=True, upload_to='photos/workout/'),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='is_placeholder',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='playback_id',
            field=models.CharField(blank=True, help_text='Stream playback ID', max_length=64, null=True),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='provider',
            field=models.CharField(choices=[('r2', 'Cloudflare R2'), ('stream', 'Cloudflare Stream'), ('external', 'External URL')], default='r2', help_text='Video storage provider', max_length=16),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='r2_archetype',
            field=models.CharField(blank=True, choices=[('peer', 'Ровесник'), ('professional', 'Успешный профессионал'), ('mentor', 'Мудрый наставник')], help_text='Archetype for R2 videos', max_length=20),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='r2_file',
            field=models.FileField(blank=True, help_text='Video file in R2 storage', null=True, upload_to='videos/'),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='r2_kind',
            field=models.CharField(choices=[('technique', 'Technique'), ('mistake', 'Common Mistake'), ('instruction', 'Instruction'), ('intro', 'Introduction'), ('weekly', 'Weekly Motivation'), ('closing', 'Closing'), ('reminder', 'Reminder'), ('explain', 'Exercise Explanation')], default='instruction', help_text='Video type for R2 organization', max_length=20),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='script_text',
            field=models.TextField(blank=True, help_text='Video script or content'),
        ),
        migrations.AddField(
            model_name='videoclip',
            name='stream_uid',
            field=models.CharField(blank=True, help_text='Cloudflare Stream UID', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='exercise',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='exercise',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='finalvideo',
            name='arch',
            field=models.CharField(choices=[('111', 'Н'), ('222', 'П'), ('333', 'Р')], max_length=3, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='videoclip',
            name='archetype',
            field=models.CharField(choices=[('peer', 'Ровесник'), ('professional', 'Успешный профессионал'), ('mentor', 'Мудрый наставник')], max_length=20),
        ),
        migrations.AlterField(
            model_name='weeklylesson',
            name='archetype',
            field=models.CharField(choices=[('111', 'Н'), ('222', 'П'), ('333', 'Р')], max_length=3),
        ),
        migrations.AlterField(
            model_name='weeklylesson',
            name='duration_sec',
            field=models.PositiveIntegerField(default=180, help_text='Estimated reading time in seconds'),
        ),
        migrations.AlterField(
            model_name='weeklylesson',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='weeklylesson',
            name='week',
            field=models.PositiveSmallIntegerField(),
        ),
        migrations.AlterUniqueTogether(
            name='weeklylesson',
            unique_together={('week', 'archetype', 'locale')},
        ),
        migrations.AlterUniqueTogether(
            name='videoclip',
            unique_together={('exercise', 'r2_kind', 'r2_archetype', 'model_name', 'reminder_text')},
        ),
        migrations.AddIndex(
            model_name='videoclip',
            index=models.Index(fields=['exercise', 'r2_kind', 'r2_archetype'], name='video_clips_exercis_1e5613_idx'),
        ),
        migrations.AddIndex(
            model_name='videoclip',
            index=models.Index(fields=['r2_kind', 'r2_archetype'], name='video_clips_r2_kind_d2e4dd_idx'),
        ),
        migrations.AddIndex(
            model_name='videoclip',
            index=models.Index(fields=['is_active', 'r2_kind'], name='video_clips_is_acti_9705f9_idx'),
        ),
        migrations.RemoveField(
            model_name='videoclip',
            name='type',
        ),
        migrations.RemoveField(
            model_name='videoclip',
            name='url',
        ),
        migrations.RunPython(
            set_provider_for_existing_clips,
            reverse_set_provider,
        ),
    ]
