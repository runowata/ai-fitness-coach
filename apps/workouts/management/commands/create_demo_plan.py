import random
from django.core.management.base import BaseCommand, CommandError
from django.contrib.auth import get_user_model
from apps.workouts.models import WorkoutPlan, DailyWorkout

User = get_user_model()

BASIC_EXERCISES = [
    {"slug": "pushups", "name": "–û—Ç–∂–∏–º–∞–Ω–∏—è"},
    {"slug": "squats", "name": "–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è"},
    {"slug": "plank", "name": "–ü–ª–∞–Ω–∫–∞"},
    {"slug": "burpee", "name": "–ë–µ—Ä–ø–∏"},
]

class Command(BaseCommand):
    help = "–°–æ–∑–¥–∞—ë—Ç –¥–µ–º–æ-–ø–ª–∞–Ω –±–µ–∑ —Ç–∞–±–ª–∏—Ü—ã Exercise (—Ç–æ–ª—å–∫–æ JSON –≤ DailyWorkout)."
    def add_arguments(self, parser): parser.add_argument("user_id", type=int)

    def handle(self, *args, **opts):
        user_id = opts["user_id"]
        try: user = User.objects.get(pk=user_id)
        except User.DoesNotExist: raise CommandError(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å id={user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        self.stdout.write(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {getattr(user,'email',user.username)}")

        plan = WorkoutPlan.objects.filter(user=user, status="CONFIRMED").first()
        if not plan:
            plan = WorkoutPlan.objects.create(
                user=user, name="–î–µ–º–æ-–ø–ª–∞–Ω –Ω–∞ 1 –Ω–µ–¥–µ–ª—é", duration_weeks=4,
                plan_data={"demo": True, "source": "create_demo_plan"}, status="CONFIRMED",
            )
            self.stdout.write(self.style.SUCCESS(f"üìÖ –°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω: {plan.name} (id={plan.id})"))
        else:
            DailyWorkout.objects.filter(plan=plan).delete()
            self.stdout.write("‚ôªÔ∏è –ü–µ—Ä–µ—Å–æ–∑–¥–∞—é –¥–Ω–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –ø–ª–∞–Ω–µ")

        for day in range(1, 8):
            is_rest = day in (3, 6)
            if is_rest:
                exercises = []; name = "–î–µ–Ω—å –æ—Ç–¥—ã—Ö–∞"
            else:
                # –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –º–µ–Ω—å—à–µ 3
                exercise_count = min(3, len(BASIC_EXERCISES))
                chosen = random.sample(BASIC_EXERCISES, k=exercise_count) if BASIC_EXERCISES else []
                exercises = [
                    {"exercise_id": e["slug"], "exercise_name": e["name"],
                     "sets": 3, "reps": random.randint(8,15), "rest_seconds": 60}
                    for e in chosen
                ]
                name = f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–µ–Ω—å {day}"

            dw = DailyWorkout.objects.create(
                plan=plan, day_number=day, week_number=1,
                name=name, exercises=exercises, is_rest_day=is_rest,
            )
            self.stdout.write(f"   –î–µ–Ω—å {day}: {'–æ—Ç–¥—ã—Ö' if is_rest else ', '.join(x['exercise_name'] for x in exercises)} (dw_id={dw.id})")

        self.stdout.write(self.style.SUCCESS("üéâ –î–µ–º–æ-–ø–ª–∞–Ω –≥–æ—Ç–æ–≤."))