# Generated by Django 5.0.8 on 2025-08-27 16:45 - Clean Analytics Migration

import uuid
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("user_signup", "User Signup"),
                            ("user_login", "User Login"),
                            ("user_logout", "User Logout"),
                            ("onboarding_started", "Onboarding Started"),
                            ("onboarding_completed", "Onboarding Completed"),
                            ("workout_started", "Workout Started"),
                            ("workout_completed", "Workout Completed"),
                            ("workout_skipped", "Workout Skipped"),
                            ("exercise_substituted", "Exercise Substituted"),
                            ("workout_feedback", "Workout Feedback"),
                            ("weekly_lesson_viewed", "Weekly Lesson Viewed"),
                            ("weekly_lesson_completed", "Weekly Lesson Completed"),
                            ("video_played", "Video Played"),
                            ("video_completed", "Video Completed"),
                            ("achievement_unlocked", "Achievement Unlocked"),
                            ("level_up", "Level Up"),
                            ("streak_milestone", "Streak Milestone"),
                            ("xp_earned", "XP Earned"),
                            ("screen_view", "Screen View"),
                            ("button_click", "Button Click"),
                            ("feature_used", "Feature Used"),
                            ("coach_archetype_selected", "Coach Archetype Selected"),
                            ("settings_changed", "Settings Changed"),
                            ("push_notification_sent", "Push Notification Sent"),
                            ("push_notification_opened", "Push Notification Opened"),
                            ("push_notification_dismissed", "Push Notification Dismissed"),
                            ("custom_event", "Custom Event"),
                        ],
                        max_length=50,
                    ),
                ),
                ("event_name", models.CharField(max_length=100)),
                ("user_id_external", models.CharField(blank=True, max_length=100)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("device_id", models.CharField(blank=True, max_length=100)),
                ("properties", models.JSONField(default=dict)),
                ("user_properties", models.JSONField(default=dict)),
                ("platform", models.CharField(blank=True, max_length=20)),
                ("os_name", models.CharField(blank=True, max_length=50)),
                ("os_version", models.CharField(blank=True, max_length=50)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("app_version", models.CharField(blank=True, max_length=20)),
                ("language", models.CharField(default="ru", max_length=10)),
                ("country", models.CharField(blank=True, max_length=10)),
                ("region", models.CharField(blank=True, max_length=50)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("event_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("insert_id", models.CharField(blank=True, max_length=100)),
                ("amplitude_sent", models.BooleanField(default=False)),
                (
                    "amplitude_sent_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("amplitude_error", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_events",
                "ordering": ["-event_time"],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("started_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("platform", models.CharField(blank=True, max_length=20)),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("events_count", models.PositiveIntegerField(default=0)),
                ("screens_viewed", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_sessions",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("daily_active_users", "Daily Active Users"),
                            ("weekly_active_users", "Weekly Active Users"),
                            ("monthly_active_users", "Monthly Active Users"),
                            ("workout_completion_rate", "Workout Completion Rate"),
                            ("retention_rate", "Retention Rate"),
                            ("feature_adoption_rate", "Feature Adoption Rate"),
                            ("average_session_duration", "Average Session Duration"),
                        ],
                        max_length=50,
                    ),
                ),
                ("metric_date", models.DateField()),
                ("metric_value", models.FloatField()),
                ("dimension_filters", models.JSONField(default=dict)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "analytics_metrics",
                "ordering": ["-metric_date"],
                "unique_together": {("metric_type", "metric_date", "dimension_filters")},
            },
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["user", "event_time"], name="analytics_e_user_id_7e7e65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["event_type", "event_time"],
                name="analytics_e_event_t_8e9f65_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(fields=["event_time"], name="analytics_e_event_t_2c7b68_idx"),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(fields=["session_id"], name="analytics_e_session_7e8f65_idx"),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(fields=["device_id"], name="analytics_e_device__8e7f65_idx"),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["amplitude_sent"], name="analytics_e_amplitu_8e7f65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["user", "started_at"], name="user_sessio_user_id_7e8f65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(fields=["session_id"], name="user_sessio_session_8e7f65_idx"),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(fields=["started_at"], name="user_sessio_started_8e7f65_idx"),
        ),
        migrations.AddIndex(
            model_name="analyticsmetrics",
            index=models.Index(
                fields=["metric_type", "metric_date"],
                name="analytics_m_metric__8e7f65_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsmetrics",
            index=models.Index(
                fields=["metric_date"], name="analytics_m_metric__8e7f66_idx"
            ),
        ),
    ]