#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Cloudflare R2
"""

import boto3
from collections import defaultdict
from datetime import datetime

s3 = boto3.client('s3',
    endpoint_url='https://92568f8b8a15c68a9ece5fe08c66485b.r2.cloudflarestorage.com',
    aws_access_key_id='3a9fd5a6b38ec994e057e33c1096874e',
    aws_secret_access_key='0817f9a3154b63b1968620a966e05e36f80fca0308ba91d9c8bf65e8622baa13'
)

print('üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –§–ê–ô–õ–û–í –í CLOUDFLARE R2')
print('=' * 50)

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã
paginator = s3.get_paginator('list_objects_v2')
pages = paginator.paginate(Bucket='ai-fitness-media')

files_by_category = defaultdict(list)
total_size = 0
total_count = 0

for page in pages:
    if 'Contents' in page:
        for obj in page['Contents']:
            key = obj['Key']
            size = obj['Size']
            total_size += size
            total_count += 1
            
            # –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ–º
            if key.startswith('videos/exercises/'):
                files_by_category['exercises'].append(key)
            elif key.startswith('videos/motivation/'):
                files_by_category['motivation'].append(key)
            elif key.startswith('videos/weekly/'):
                files_by_category['weekly'].append(key)
            elif key.startswith('videos/progress/'):
                files_by_category['progress'].append(key)
            elif key.startswith('videos/final/'):
                files_by_category['final'].append(key)
            elif key.startswith('images/'):
                files_by_category['images'].append(key)
            else:
                files_by_category['other'].append(key)

# –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
print(f'üìä –í–°–ï–ì–û –§–ê–ô–õ–û–í: {total_count}')
print(f'üíæ –û–ë–©–ò–ô –†–ê–ó–ú–ï–†: {total_size / (1024**3):.2f} GB')
print()

# –î–µ—Ç–∞–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –≤–∏–¥–µ–æ
video_categories = {
    'exercises': 271,
    'motivation': 315,
    'weekly': 18,
    'progress': 9,
    'final': 3
}

print('üìÅ –í–ò–î–ï–û –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:')
print('-' * 40)
total_videos = 0
for category, expected in video_categories.items():
    actual = len(files_by_category.get(category, []))
    total_videos += actual
    status = '‚úÖ' if actual == expected else 'üîÑ' if actual > 0 else '‚ùå'
    print(f'{status} {category:15} {actual:3}/{expected:3} —Ñ–∞–π–ª–æ–≤')

print('-' * 40)
print(f'   –ò–¢–û–ì–û –í–ò–î–ï–û:    {total_videos}/616')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
percent = (total_videos / 616) * 100
print(f'\nüìä –ü–†–û–ì–†–ï–°–° –ó–ê–ì–†–£–ó–ö–ò: {percent:.1f}%')

if percent < 100:
    remaining = 616 - total_videos
    print(f'‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: {remaining} –≤–∏–¥–µ–æ')

# –î—Ä—É–≥–∏–µ —Ñ–∞–π–ª—ã
if files_by_category['images']:
    print(f'\nüì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(files_by_category["images"])} —Ñ–∞–π–ª–æ–≤')
    
if files_by_category['other']:
    print(f'\nüìÑ –î—Ä—É–≥–∏–µ —Ñ–∞–π–ª—ã: {len(files_by_category["other"])} —Ñ–∞–π–ª–æ–≤')
    for f in files_by_category['other'][:5]:
        print(f'  - {f}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã
print('\nüîç –ü–†–ò–ú–ï–†–´ –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –í–ò–î–ï–û:')
examples = [
    'videos/exercises/warmup_01_technique_m01.mp4',
    'videos/exercises/main_001_technique_m01.mp4',
    'videos/exercises/endurance_01_technique_m01.mp4',
    'videos/exercises/relaxation_01_technique_m01.mp4',
    'videos/motivation/intro_bro_day01.mp4',
    'videos/weekly/weekly_bro_week1.mp4',
    'videos/progress/progress_bro_1.mp4',
    'videos/final/final_bro.mp4'
]

for example in examples:
    exists = any(f == example for cat in files_by_category.values() for f in cat)
    status = '‚úÖ' if exists else '‚ùå'
    category = example.split('/')[1]
    name = example.split('/')[-1]
    print(f'{status} {category:10} {name}')

# –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
if files_by_category['exercises']:
    print('\nüìã –î–ï–¢–ê–õ–ò –£–ü–†–ê–ñ–ù–ï–ù–ò–ô:')
    exercise_types = {'warmup': 0, 'main': 0, 'endurance': 0, 'relaxation': 0}
    
    for file in files_by_category['exercises']:
        filename = file.split('/')[-1]
        for ex_type in exercise_types:
            if filename.startswith(ex_type):
                exercise_types[ex_type] += 1
                break
    
    expected_ex = {'warmup': 42, 'main': 145, 'endurance': 42, 'relaxation': 42}
    for ex_type, count in exercise_types.items():
        expected = expected_ex[ex_type]
        status = '‚úÖ' if count == expected else 'üîÑ'
        print(f'  {status} {ex_type:12} {count:3}/{expected:3}')

print('\n' + '=' * 50)
print(f'üìù –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')