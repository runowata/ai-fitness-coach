#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏–∑ CSV
"""

import os
import pandas as pd
import csv
from pathlib import Path
import re

def load_reference_names():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑ CSV —Ñ–∞–π–ª–∞"""
    
    csv_file = '/Users/alexbel/Desktop/AI Fitness Coach/media_lists/EXERCISES_271_VIDEOS.csv'
    
    try:
        df = pd.read_csv(csv_file)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏–∑ CSV")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–≤—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
        reference_names = set()
        for _, row in df.iterrows():
            new_name = row['new_name']
            reference_names.add(new_name)
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(reference_names)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π")
        return reference_names, df
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV: {e}")
        return None, None

def get_actual_video_names():
    """–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ –ø–∞–ø–∫–∏ exercises –Ω–∞ Z9"""
    
    # –ü–æ—Å–∫–æ–ª—å–∫—É Z9 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∏–º –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
    actual_names = set()
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ CSV —Ñ–∞–π–ª–∞ EXERCISES_271_VIDEOS.csv
    csv_file = '/Users/alexbel/Desktop/AI Fitness Coach/media_lists/EXERCISES_271_VIDEOS.csv'
    
    try:
        df = pd.read_csv(csv_file)
        for _, row in df.iterrows():
            target_path = row['target_path']
            filename = os.path.basename(target_path)
            actual_names.add(filename)
        
        print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(actual_names)} –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ exercises")
        return actual_names
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π: {e}")
        return set()

def check_naming_patterns():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è"""
    
    patterns = {
        'warmup': r'^warmup_\d{2}_technique_m\d{2}\.mp4$',
        'main': r'^main_\d{3}_technique_m\d{2}\.mp4$',
        'endurance': r'^endurance_\d{2}_technique_m\d{2}\.mp4$',
        'relaxation': r'^relaxation_\d{2}_technique_m\d{2}\.mp4$'
    }
    
    return patterns

def analyze_naming_compliance(video_names, reference_df):
    """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º"""
    
    patterns = check_naming_patterns()
    
    results = {
        'correct': [],
        'incorrect': [],
        'missing': [],
        'extra': []
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –≤–∏–¥–µ–æ
    for video_name in video_names:
        is_valid = False
        
        for category, pattern in patterns.items():
            if re.match(pattern, video_name):
                is_valid = True
                results['correct'].append({
                    'filename': video_name,
                    'category': category,
                    'pattern': pattern
                })
                break
        
        if not is_valid:
            results['incorrect'].append({
                'filename': video_name,
                'reason': '–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—É –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è'
            })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –≤–∏–¥–µ–æ –∏–∑ —ç—Ç–∞–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
    reference_names = set()
    for _, row in reference_df.iterrows():
        reference_names.add(row['new_name'])
    
    # –ù–∞—Ö–æ–¥–∏–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ
    missing = reference_names - video_names
    for missing_name in missing:
        results['missing'].append({
            'filename': missing_name,
            'reason': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø–∞–ø–∫–µ exercises'
        })
    
    # –ù–∞—Ö–æ–¥–∏–º –ª–∏—à–Ω–∏–µ
    extra = video_names - reference_names
    for extra_name in extra:
        results['extra'].append({
            'filename': extra_name,
            'reason': '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —ç—Ç–∞–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ'
        })
    
    return results

def generate_comparison_report(video_names, reference_names, reference_df, results):
    """–°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç –æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–π"""
    
    report = f"""# üìä –û–¢–ß–ï–¢ –û –°–û–û–¢–í–ï–¢–°–¢–í–ò–ò –ù–ê–ó–í–ê–ù–ò–ô –í–ò–î–ï–û–§–ê–ô–õ–û–í

## –î–∞—Ç–∞: {pd.Timestamp.now().strftime('%Y-%m-%d %H:%M:%S')}

## üìà –°–í–û–î–ö–ê:

### –û–±—â–∏–µ —Ü–∏—Ñ—Ä—ã:
- **–≠—Ç–∞–ª–æ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π**: {len(reference_names)}
- **–§–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –≤–∏–¥–µ–æ**: {len(video_names)}
- **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É**: {len(results['correct'])}
- **–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É**: {len(results['incorrect'])}
- **–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç**: {len(results['missing'])}
- **–õ–∏—à–Ω–∏—Ö**: {len(results['extra'])}

---

## ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï –ù–ê–ó–í–ê–ù–ò–Ø ({len(results['correct'])}):

"""
    
    if results['correct']:
        for item in results['correct'][:20]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20
            report += f"- `{item['filename']}` - {item['category']}\n"
        
        if len(results['correct']) > 20:
            report += f"- ... –∏ –µ—â–µ {len(results['correct']) - 20} —Ñ–∞–π–ª–æ–≤\n"
    else:
        report += "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.\n"
    
    report += f"""
---

## ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ï –ù–ê–ó–í–ê–ù–ò–Ø ({len(results['incorrect'])}):

"""
    
    if results['incorrect']:
        for item in results['incorrect']:
            report += f"- `{item['filename']}` - {item['reason']}\n"
    else:
        report += "–í—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º.\n"
    
    report += f"""
---

## üîç –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –í–ò–î–ï–û ({len(results['missing'])}):

"""
    
    if results['missing']:
        for item in results['missing'][:20]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20
            report += f"- `{item['filename']}` - {item['reason']}\n"
        
        if len(results['missing']) > 20:
            report += f"- ... –∏ –µ—â–µ {len(results['missing']) - 20} —Ñ–∞–π–ª–æ–≤\n"
    else:
        report += "–í—Å–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç.\n"
    
    report += f"""
---

## üîÑ –õ–ò–®–ù–ò–ï –í–ò–î–ï–û ({len(results['extra'])}):

"""
    
    if results['extra']:
        for item in results['extra'][:20]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20
            report += f"- `{item['filename']}` - {item['reason']}\n"
        
        if len(results['extra']) > 20:
            report += f"- ... –∏ –µ—â–µ {len(results['extra']) - 20} —Ñ–∞–π–ª–æ–≤\n"
    else:
        report += "–ù–µ—Ç –ª–∏—à–Ω–∏—Ö –≤–∏–¥–µ–æ.\n"
    
    report += f"""
---

## üìã –ü–ê–¢–¢–ï–†–ù–´ –ò–ú–ï–ù–û–í–ê–ù–ò–Ø:

### –û–∂–∏–¥–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:
- **–†–∞–∑–º–∏–Ω–∫–∞**: `warmup_NN_technique_mMM.mp4` (–≥–¥–µ NN = 01-42, MM = 01-03)
- **–û—Å–Ω–æ–≤–Ω–∞—è**: `main_NNN_technique_mMM.mp4` (–≥–¥–µ NNN = 001-145, MM = 01-03)
- **–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å**: `endurance_NN_technique_mMM.mp4` (–≥–¥–µ NN = 01-42, MM = 01-03)
- **–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ**: `relaxation_NN_technique_mMM.mp4` (–≥–¥–µ NN = 01-42, MM = 01-03)

### –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:

"""
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    category_counts = {}
    for item in results['correct']:
        category = item['category']
        category_counts[category] = category_counts.get(category, 0) + 1
    
    expected_counts = {
        'warmup': 42,
        'main': 145,
        'endurance': 42,
        'relaxation': 42
    }
    
    for category, expected in expected_counts.items():
        actual = category_counts.get(category, 0)
        status = "‚úÖ" if actual == expected else "‚ùå"
        report += f"- **{category.title()}**: {actual}/{expected} {status}\n"
    
    report += f"""
---

## üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:

"""
    
    if results['incorrect']:
        report += "1. **–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã** —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è\n"
    
    if results['missing']:
        report += "2. **–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∏–¥–µ–æ** –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n"
    
    if results['extra']:
        report += "3. **–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏—à–Ω–∏–µ —Ñ–∞–π–ª—ã** - –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ –¥—É–±–ª–∏—Ä—É—é—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ\n"
    
    if not (results['incorrect'] or results['missing'] or results['extra']):
        report += "üéâ **–í—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.**\n"
    
    return report

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏–π"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –ù–ê–ó–í–ê–ù–ò–ô –í–ò–î–ï–û–§–ê–ô–õ–û–í")
    print("=" * 60)
    
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    print("\nüìã –®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π...")
    reference_names, reference_df = load_reference_names()
    
    if not reference_names:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è!")
        return
    
    # 2. –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    print("\nüìÅ –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –≤–∏–¥–µ–æ...")
    video_names = get_actual_video_names()
    
    if not video_names:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ!")
        return
    
    # 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    print("\nüîç –®–∞–≥ 3: –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π...")
    results = analyze_naming_compliance(video_names, reference_df)
    
    # 4. –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"\nüìä –ö–†–ê–¢–ö–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"  –≠—Ç–∞–ª–æ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π: {len(reference_names)}")
    print(f"  –§–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –≤–∏–¥–µ–æ: {len(video_names)}")
    print(f"  –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: {len(results['correct'])} ‚úÖ")
    print(f"  –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: {len(results['incorrect'])} ‚ùå")
    print(f"  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö: {len(results['missing'])} üîç")
    print(f"  –õ–∏—à–Ω–∏—Ö: {len(results['extra'])} üîÑ")
    
    # 5. –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print("\nüìÑ –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
    report = generate_comparison_report(video_names, reference_names, reference_df, results)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    report_file = '/Users/alexbel/Desktop/AI Fitness Coach/media_lists/VIDEO_NAMES_COMPLIANCE_REPORT.md'
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(report)
    
    print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_file}")
    
    # –ò—Ç–æ–≥
    print("\n" + "=" * 60)
    if results['incorrect'] or results['missing'] or results['extra']:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Ñ–∞–π–ª–æ–≤")
        print("üìÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    else:
        print("üéâ –û–¢–õ–ò–ß–ù–û! –í—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º")
    
    print(f"üìä –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: {len(results['correct'])}/{len(reference_names)} ({len(results['correct'])/len(reference_names)*100:.1f}%)")

if __name__ == '__main__':
    main()