#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
"""

import os
import sys
import django

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
django.setup()

from apps.workouts.models import VideoClip, Exercise, WorkoutPlan, DailyWorkout
from apps.content.models import MediaAsset
from apps.workouts.services import VideoPlaylistBuilder
from django.contrib.auth import get_user_model

User = get_user_model()

def test_video_integration():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –≤ –ø–ª–∞–Ω—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    """
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –í–ò–î–ï–û")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ VideoClip –ø–æ —Ç–∏–ø–∞–º
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ VideoClip:")
    video_types = ['technique', 'instruction', 'reminder', 'mistake', 'intro', 'weekly', 'progress', 'final']
    
    for video_type in video_types:
        count = VideoClip.objects.filter(type=video_type, is_active=True).count()
        print(f"  üìπ {video_type}: {count} –≤–∏–¥–µ–æ")
    
    total_videos = VideoClip.objects.filter(is_active=True).count()
    print(f"  üìà –í–°–ï–ì–û VideoClip: {total_videos}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º MediaAsset –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüìÅ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ MediaAsset:")
    categories = ['motivation_intro', 'motivation_weekly', 'motivation_progress', 'motivation_final']
    
    for category in categories:
        count = MediaAsset.objects.filter(category=category, is_active=True).count()
        print(f"  üìÇ {category}: {count} —Ñ–∞–π–ª–æ–≤")
    
    total_media = MediaAsset.objects.filter(is_active=True).count()
    print(f"  üìà –í–°–ï–ì–û MediaAsset: {total_media}")
    
    # 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
    print("\nüèãÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    test_user, created = User.objects.get_or_create(
        email='test@example.com',
        defaults={
            'first_name': 'Test',
            'is_active': True,
            'is_adult_confirmed': True
        }
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    workout_plan, created = WorkoutPlan.objects.get_or_create(
        user=test_user,
        name='Test Plan',
        defaults={
            'duration_weeks': 8,
            'goal': 'muscle_gain',
            'plan_data': {'test': True},
            'is_active': True
        }
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –¥–ª—è –¥–Ω—è 1
    daily_workout, created = DailyWorkout.objects.get_or_create(
        plan=workout_plan,
        day_number=1,
        defaults={
            'week_number': 1,
            'name': '–¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–µ–Ω—å 1',
            'exercises': [
                {
                    'exercise_slug': 'push-ups',
                    'sets': 3,
                    'reps': '8-12',
                    'rest_seconds': 60
                }
            ],
            'is_rest_day': False
        }
    )
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º VideoPlaylistBuilder
    print("\nüé¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VideoPlaylistBuilder...")
    
    builder = VideoPlaylistBuilder()
    playlist = builder.build_workout_playlist(daily_workout, 'bro')
    
    print(f"  üìã –°–æ–∑–¥–∞–Ω –ø–ª–µ–π–ª–∏—Å—Ç —Å {len(playlist)} –≤–∏–¥–µ–æ:")
    for i, video in enumerate(playlist, 1):
        print(f"    {i}. {video['type']}: {video['title']} ({video.get('duration', 0)}s)")
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏
    test_days = [7, 14, 28, 56]  # –ö–æ–Ω–µ—Ü –Ω–µ–¥–µ–ª–∏, –ø—Ä–æ–≥—Ä–µ—Å—Å, —Ñ–∏–Ω–∞–ª
    
    for day in test_days:
        if day <= workout_plan.duration_weeks * 7:
            week = (day - 1) // 7 + 1
            test_workout, created = DailyWorkout.objects.get_or_create(
                plan=workout_plan,
                day_number=day,
                defaults={
                    'week_number': week,
                    'name': f'–¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–µ–Ω—å {day}',
                    'exercises': [],
                    'is_rest_day': day % 7 == 0
                }
            )
            
            playlist = builder.build_workout_playlist(test_workout, 'bro')
            special_videos = [v for v in playlist if v['type'] in ['weekly_motivation', 'progress_milestone', 'program_completion']]
            
            if special_videos:
                print(f"\n  üìÖ –î–µ–Ω—å {day} (–Ω–µ–¥–µ–ª—è {week}):")
                for video in special_videos:
                    print(f"    üéØ {video['type']}: {video['title']}")

def main():
    try:
        test_video_integration()
        
        print("\n" + "=" * 50)
        print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print("1. –í—Å–µ –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –≤–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –º–æ–¥–µ–ª–∏")
        print("2. VideoPlaylistBuilder –æ–±–Ω–æ–≤–ª–µ–Ω —Å –ø–æ–ª–Ω–æ–π –ª–æ–≥–∏–∫–æ–π")
        print("3. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è intro, progress –∏ final –≤–∏–¥–µ–æ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("4. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()