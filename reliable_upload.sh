#!/bin/bash
# reliable_upload.sh
# –ù–∞–¥—ë–∂–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏ —Å–±–æ—è—Ö

LOG_FILE="r2_upload_reliable.log"
STATE_FILE="r2_upload_state.json"
MAX_RETRIES=100
TIMEOUT_MINUTES=30

echo "üõ°Ô∏è –ù–∞–¥—ë–∂–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤ R2 —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º"
echo "==========================================================="
echo "‚Ä¢ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ—è—Ö: –î–ê"
echo "‚Ä¢ –¢–∞–π–º–∞—É—Ç –Ω–∞ –ø–æ–ø—ã—Ç–∫—É: ${TIMEOUT_MINUTES} –º–∏–Ω—É—Ç"
echo "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: ${MAX_RETRIES}"
echo "‚Ä¢ –õ–æ–≥: ${LOG_FILE}"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
get_uploaded_count() {
    if [ -f "$STATE_FILE" ]; then
        python -c "import json; print(len(json.load(open('$STATE_FILE'))))"
    else
        echo "0"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤
get_total_count() {
    python -c "from pathlib import Path; print(sum(1 for _ in Path('selected_media').rglob('*') if _.is_file()))"
}

TOTAL_FILES=$(get_total_count)
RETRY_COUNT=0
LAST_UPLOADED=0

while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    CURRENT_UPLOADED=$(get_uploaded_count)
    REMAINING=$((TOTAL_FILES - CURRENT_UPLOADED))
    
    echo "üìä –°—Ç–∞—Ç—É—Å: –ó–∞–≥—Ä—É–∂–µ–Ω–æ $CURRENT_UPLOADED –∏–∑ $TOTAL_FILES —Ñ–∞–π–ª–æ–≤"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if [ $REMAINING -eq 0 ]; then
        echo "üéâ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"
        break
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —Å –ø—Ä–æ—à–ª–æ–π –ø–æ–ø—ã—Ç–∫–∏
    if [ $CURRENT_UPLOADED -gt $LAST_UPLOADED ]; then
        echo "‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å: +$((CURRENT_UPLOADED - LAST_UPLOADED)) —Ñ–∞–π–ª–æ–≤"
        RETRY_COUNT=0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
    else
        if [ $RETRY_COUNT -gt 0 ]; then
            echo "‚ö†Ô∏è  –ù–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, –ø–æ–ø—ã—Ç–∫–∞ $((RETRY_COUNT + 1)) –∏–∑ $MAX_RETRIES"
        fi
    fi
    
    LAST_UPLOADED=$CURRENT_UPLOADED
    
    echo "üîÑ –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ (–æ—Å—Ç–∞–ª–æ—Å—å: $REMAINING —Ñ–∞–π–ª–æ–≤)..."
    echo "---" >> $LOG_FILE
    echo "[$(date)] –ü–æ–ø—ã—Ç–∫–∞ $((RETRY_COUNT + 1)), –æ—Å—Ç–∞–ª–æ—Å—å: $REMAINING —Ñ–∞–π–ª–æ–≤" >> $LOG_FILE
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å —Ç–∞–π–º–∞—É—Ç–æ–º (–∏—Å–ø–æ–ª—å–∑—É–µ–º gtimeout –Ω–∞ macOS –∏–ª–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º)
    if command -v gtimeout &> /dev/null; then
        gtimeout ${TIMEOUT_MINUTES}m python upload_to_r2.py --auto >> $LOG_FILE 2>&1
    elif command -v timeout &> /dev/null; then
        timeout ${TIMEOUT_MINUTES}m python upload_to_r2.py --auto >> $LOG_FILE 2>&1
    else
        # Fallback - –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ timeout
        python upload_to_r2.py --auto >> $LOG_FILE 2>&1 &
        PID=$!
        SECONDS=0
        MAX_SECONDS=$((TIMEOUT_MINUTES * 60))
        
        while kill -0 $PID 2>/dev/null; do
            if [ $SECONDS -ge $MAX_SECONDS ]; then
                echo "‚è±Ô∏è  –¢–∞–π–º–∞—É—Ç —á–µ—Ä–µ–∑ ${TIMEOUT_MINUTES} –º–∏–Ω—É—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å..."
                kill $PID 2>/dev/null
                wait $PID 2>/dev/null
                break
            fi
            sleep 10
        done
    fi
    EXIT_CODE=$?
    
    if [ $EXIT_CODE -eq 124 ]; then
        echo "‚è±Ô∏è  –¢–∞–π–º–∞—É—Ç —á–µ—Ä–µ–∑ ${TIMEOUT_MINUTES} –º–∏–Ω—É—Ç, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
    elif [ $EXIT_CODE -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ (–∫–æ–¥: $EXIT_CODE), –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥..."
        sleep 10
    fi
    
    RETRY_COUNT=$((RETRY_COUNT + 1))
    
    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
    sleep 5
done

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
FINAL_UPLOADED=$(get_uploaded_count)
FINAL_REMAINING=$((TOTAL_FILES - FINAL_UPLOADED))

echo ""
echo "==========================================================="
echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:"
echo "‚Ä¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: $FINAL_UPLOADED –∏–∑ $TOTAL_FILES —Ñ–∞–π–ª–æ–≤"
echo "‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å: $FINAL_REMAINING —Ñ–∞–π–ª–æ–≤"

if [ $FINAL_REMAINING -eq 0 ]; then
    echo "‚úÖ –°—Ç–∞—Ç—É—Å: –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã URL
    echo ""
    echo "üîó –ü—Ä–∏–º–µ—Ä—ã URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:"
    echo "‚Ä¢ https://92568f8b8a15c68a9ece5fe08c66485b.r2.cloudflarestorage.com/videos/exercises/squats_technique_m01.mp4"
    echo "‚Ä¢ https://pub-92568f8b8a15c68a9ece5fe08c66485b.r2.dev/photos/quotes/card_quotes_0001.jpg"
else
    echo "‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: –ù–ï –í–°–ï –§–ê–ô–õ–´ –ó–ê–ì–†–£–ñ–ï–ù–´"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
fi

echo "üìù –ü–æ–ª–Ω—ã–π –ª–æ–≥: $LOG_FILE"