#!/bin/bash
# monitor_upload.sh
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ R2 (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫)"
echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
echo "========================================================"

while true; do
    clear
    echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ R2 - $(date '+%H:%M:%S')"
    echo "========================================================"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    if ps aux | grep -v grep | grep -q "upload_to_r2.py"; then
        echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–µ–Ω"
        PID=$(ps aux | grep -v grep | grep "upload_to_r2.py" | awk '{print $2}')
        echo "   PID: $PID"
    else
        echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    python -c "
import json
from pathlib import Path

state_file = Path('r2_upload_state.json')
media_dir = Path('selected_media')

total = sum(1 for _ in media_dir.rglob('*') if _.is_file())
uploaded = len(json.load(open(state_file))) if state_file.exists() else 0
remaining = total - uploaded
percent = (uploaded / total * 100) if total > 0 else 0

print(f'üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:  {total}')
print(f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ:     {uploaded}')
print(f'‚è≥ –û—Å—Ç–∞–ª–æ—Å—å:      {remaining}')
print(f'üìà –ü—Ä–æ–≥—Ä–µ—Å—Å:      {percent:.1f}%')
print()

# –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
bar_length = 50
filled = int(bar_length * uploaded / total)
bar = '‚ñà' * filled + '‚ñë' * (bar_length - filled)
print(f'[{bar}] {percent:.1f}%')
print()

# –°–∫–æ—Ä–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
import time
state_time_file = Path('.upload_monitor_state')
current_time = time.time()

if state_time_file.exists():
    with open(state_time_file) as f:
        prev_data = f.read().split(',')
        prev_uploaded = int(prev_data[0])
        prev_time = float(prev_data[1])
    
    time_diff = current_time - prev_time
    files_diff = uploaded - prev_uploaded
    
    if time_diff > 0:
        speed = files_diff / time_diff * 60  # —Ñ–∞–π–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É
        if speed > 0:
            eta_minutes = remaining / speed
            eta_hours = int(eta_minutes // 60)
            eta_mins = int(eta_minutes % 60)
            print(f'‚ö° –°–∫–æ—Ä–æ—Å—Ç—å:      {speed:.1f} —Ñ–∞–π–ª–æ–≤/–º–∏–Ω')
            if eta_hours > 0:
                print(f'‚è±Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å:      ~{eta_hours}—á {eta_mins}–º–∏–Ω')
            else:
                print(f'‚è±Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å:      ~{eta_mins}–º–∏–Ω')

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
with open(state_time_file, 'w') as f:
    f.write(f'{uploaded},{current_time}')
"
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
    echo ""
    echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:"
    echo "------------------------"
    if [ -f "r2_upload_continue.log" ]; then
        tail -5 r2_upload_continue.log | sed 's/^/   /'
    fi
    
    # –ñ–¥—ë–º 30 —Å–µ–∫—É–Ω–¥
    sleep 30
done