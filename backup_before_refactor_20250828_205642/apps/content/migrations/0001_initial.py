# Generated by Django 5.0.8 on 2025-08-27 16:30 - Clean Content Migration

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("workouts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MediaAsset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                ("file_url", models.URLField()),
                ("file_size", models.PositiveIntegerField(help_text="Size in bytes")),
                (
                    "asset_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("image", "Image"),
                            ("audio", "Audio"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("exercise_technique", "Exercise Technique"),
                            ("exercise_mistake", "Exercise Mistake"),
                            ("exercise_instruction", "Exercise Instruction"),
                            ("exercise_reminder", "Exercise Reminder"),
                            ("motivation_weekly", "Weekly Motivation"),
                            ("motivation_final", "Final Congratulation"),
                            ("card_background", "Motivational Card Background"),
                            ("avatar", "Trainer Avatar"),
                            ("misc", "Miscellaneous"),
                        ],
                        max_length=30,
                    ),
                ),
                ("tags", models.JSONField(default=list)),
                (
                    "archetype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("peer", "Лучший друг"),
                            ("professional", "Профессиональный тренер"),
                            ("mentor", "Мудрый наставник"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(
                        blank=True, help_text="For videos/audio", null=True
                    ),
                ),
                (
                    "width",
                    models.PositiveIntegerField(
                        blank=True, help_text="For images/videos", null=True
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        blank=True, help_text="For images/videos", null=True
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("cdn_url", models.URLField(blank=True)),
                (
                    "cdn_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("ready", "Ready"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "exercise",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="media_assets",
                        to="workouts.exercise",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_media",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "media_assets",
            },
        ),
        migrations.CreateModel(
            name="TrainerPersona",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=50, unique=True)),
                (
                    "archetype",
                    models.CharField(
                        choices=[
                            ("peer", "Ровесник"),
                            ("professional", "Успешный профессионал"),
                            ("mentor", "Мудрый наставник"),
                            ("bro", "Бро (Legacy)"),
                            ("sergeant", "Сержант (Legacy)"),
                            ("intellectual", "Интеллектуал (Legacy)"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "tone_guidelines",
                    models.TextField(
                        help_text="Guidelines for AI tone and communication style"
                    ),
                ),
                (
                    "motivational_style",
                    models.TextField(help_text="How this trainer motivates users"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Trainer avatar image",
                        null=True,
                        upload_to="images/avatars/",
                    ),
                ),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "trainer_personas",
                "ordering": ["display_order", "title"],
            },
        ),
        migrations.CreateModel(
            name="LandingContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.CharField(default="2.0", max_length=20, unique=True)),
                ("hero_title", models.CharField(max_length=200)),
                ("hero_subtitle", models.TextField()),
                ("hero_cta_primary", models.CharField(max_length=50)),
                ("hero_cta_secondary", models.CharField(blank=True, max_length=50)),
                ("for_whom", models.TextField(help_text="Who is this app for?")),
                ("how_it_works", models.TextField(help_text="How the app works")),
                (
                    "safety",
                    models.TextField(help_text="Safety and confidence information"),
                ),
                (
                    "personalization",
                    models.TextField(help_text="Personalization features"),
                ),
                (
                    "cases",
                    models.JSONField(
                        default=list,
                        help_text="List of use cases or success stories",
                    ),
                ),
                (
                    "features",
                    models.JSONField(default=list, help_text="List of key features"),
                ),
                ("footer_text", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "landing_content",
                "ordering": ["-version"],
            },
        ),
        migrations.AddIndex(
            model_name="mediaasset",
            index=models.Index(
                fields=["category", "asset_type"], name="media_asset_categor_5d71d9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediaasset",
            index=models.Index(
                fields=["exercise", "category"], name="media_asset_exercis_0ff7e7_idx"
            ),
        ),
    ]