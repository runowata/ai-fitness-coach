#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ AI –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –ü–û–õ–ù–´–ú —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö exercise_slug
"""

import os
import csv

def get_all_exercise_slugs():
    """–ü–æ–ª—É—á–∞–µ—Ç –í–°–ï exercise_slug –∏–∑ CSV —Ñ–∞–π–ª–∞"""
    csv_file = "/Users/alexbel/Desktop/AI Fitness Coach/media_lists/EXERCISES_271_VIDEOS.csv"
    
    slugs = []
    with open(csv_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        for row in reader:
            slug = row['exercise_slug'].strip()
            if slug and slug not in slugs:
                slugs.append(slug)
    
    return sorted(slugs)

def format_exercise_list(slugs, max_per_line=10):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫"""
    formatted_lines = []
    
    for i in range(0, len(slugs), max_per_line):
        chunk = slugs[i:i+max_per_line]
        formatted_lines.append(", ".join(chunk))
    
    return ",\n".join(formatted_lines)

def update_prompt_file_full(prompt_file, all_exercise_list):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª –ø—Ä–æ–º–ø—Ç–∞ —Å –ü–û–õ–ù–´–ú —Å–ø–∏—Å–∫–æ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π"""
    
    with open(prompt_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ù–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å exercise_slug
    old_line_start = "–í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —ç—Ç–∏ exercise_slug'–∏:"
    
    # –ù–∞–π—Ç–∏ –Ω–∞—á–∞–ª–æ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
    start_idx = content.find(old_line_start)
    if start_idx == -1:
        print(f"  ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å exercise_slug –≤ {prompt_file}")
        return False
    
    # –ù–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü (—Å–ª–µ–¥—É—é—â–∏–π –∞–±–∑–∞—Ü)
    next_paragraph_idx = content.find("\n\n–°–æ–∑–¥–∞–π –ø–ª–∞–Ω", start_idx)
    if next_paragraph_idx == -1:
        next_paragraph_idx = content.find("\n\n", start_idx + len(old_line_start))
        if next_paragraph_idx == -1:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω —Å–ª–µ–¥—É—é—â–∏–π –∞–±–∑–∞—Ü, –∏—â–µ–º –¥–æ –∫–æ–Ω—Ü–∞ —Ñ–∞–π–ª–∞
            next_paragraph_idx = len(content)
    
    # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é
    new_section = f"""{old_line_start}

{all_exercise_list}

–ö–ê–¢–ï–ì–û–†–ò–ò –£–ü–†–ê–ñ–ù–ï–ù–ò–ô –î–õ–Ø –°–ü–†–ê–í–ö–ò:
- –†–∞–∑–º–∏–Ω–∫–∞ (warmup): —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å–æ —Å–ª–æ–≤–∞–º–∏ warmup, gentle, circles, rolls, swings
- –°–∏–ª–æ–≤—ã–µ (strength): push_ups, squats, pull_ups, lunges, rows, bridges
- –ö–∞—Ä–¥–∏–æ (cardio): burpees, mountain_climbers, jumping, high_knees
- –ö–æ—Ä (core): plank, crunches, bicycle, dead_bug, russian_twists
- –ì–∏–±–∫–æ—Å—Ç—å (flexibility): stretch, pose, hold, relax

–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –í–´–ë–û–†–£ –£–ü–†–ê–ñ–ù–ï–ù–ò–ô:
1. –í—ã–±–∏—Ä–∞–π 4-6 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
2. –ö–æ–º–±–∏–Ω–∏—Ä—É–π —Ä–∞–∑–Ω—ã–µ –≥—Ä—É–ø–ø—ã –º—ã—à—Ü  
3. –ù–∞—á–∏–Ω–∞–π —Å —Ä–∞–∑–º–∏–Ω–∫–∏ (warmup —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è)
4. –í–∫–ª—é—á–∞–π —Å–∏–ª–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∫–∞–∫ –æ—Å–Ω–æ–≤—É
5. –î–æ–±–∞–≤–ª—è–π –∫–∞—Ä–¥–∏–æ –¥–ª—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏
6. –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Ä–∞—Å—Ç—è–∂–∫–æ–π (flexibility —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è)
7. –£—á–∏—Ç—ã–≤–∞–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    
    # –ó–∞–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    new_content = content[:start_idx] + new_section + content[next_paragraph_idx:]
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
    with open(prompt_file, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    return True

def main():
    print("üöÄ –û–ë–ù–û–í–õ–ï–ù–ò–ï AI –ü–†–û–ú–ü–¢–û–í –° –ü–û–õ–ù–´–ú –°–ü–ò–°–ö–û–ú –£–ü–†–ê–ñ–ù–ï–ù–ò–ô")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∏—Ç—å –í–°–ï —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    print("\nüìã –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –í–°–ï–• exercise_slug –∏–∑ CSV...")
    all_slugs = get_all_exercise_slugs()
    print(f"  üìä –ù–∞–π–¥–µ–Ω–æ {len(all_slugs)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö exercise_slug")
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫
    print("\nüìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞...")
    formatted_list = format_exercise_list(all_slugs, max_per_line=8)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–≤—å—é
    preview_lines = formatted_list.split('\n')[:3]
    print(f"  üìÑ –ü—Ä–µ–≤—å—é (–ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏):")
    for line in preview_lines:
        print(f"     {line}")
    print(f"     ... –∏ –µ—â–µ {len(formatted_list.split()) - len(' '.join(preview_lines).split())} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    prompt_files = [
        "/Users/alexbel/Desktop/AI Fitness Coach/prompts/workout_plan_bro.txt",
        "/Users/alexbel/Desktop/AI Fitness Coach/prompts/workout_plan_sergeant.txt", 
        "/Users/alexbel/Desktop/AI Fitness Coach/prompts/workout_plan_intellectual.txt"
    ]
    
    print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç —Ñ–∞–π–ª–æ–≤ —Å –ü–û–õ–ù–´–ú —Å–ø–∏—Å–∫–æ–º...")
    
    for prompt_file in prompt_files:
        if os.path.exists(prompt_file):
            print(f"  üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {os.path.basename(prompt_file)}...")
            success = update_prompt_file_full(prompt_file, formatted_list)
            if success:
                print(f"     ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å {len(all_slugs)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏")
            else:
                print(f"     ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        else:
            print(f"  ‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {prompt_file}")
    
    # –°–æ–∑–¥–∞—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    categories_file = "/Users/alexbel/Desktop/AI Fitness Coach/EXERCISE_CATEGORIES.md"
    
    # –ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    categories = {
        '–†–∞–∑–º–∏–Ω–∫–∞ (Warmup)': [s for s in all_slugs if any(kw in s.lower() for kw in ['warmup', 'gentle', 'circles', 'rolls', 'swings', 'marching'])],
        '–°–∏–ª–æ–≤—ã–µ (Strength)': [s for s in all_slugs if any(kw in s.lower() for kw in ['push_ups', 'squats', 'pull_ups', 'lunges', 'rows', 'bridge'])],
        '–ö–∞—Ä–¥–∏–æ (Cardio)': [s for s in all_slugs if any(kw in s.lower() for kw in ['burpees', 'mountain', 'jumping', 'knees', 'jacks'])],
        '–ö–æ—Ä (Core)': [s for s in all_slugs if any(kw in s.lower() for kw in ['plank', 'crunches', 'bicycle', 'dead_bug', 'russian', 'abs'])],
        '–ì–∏–±–∫–æ—Å—Ç—å (Flexibility)': [s for s in all_slugs if any(kw in s.lower() for kw in ['stretch', 'pose', 'hold', 'relax', 'fold'])]
    }
    
    with open(categories_file, 'w', encoding='utf-8') as f:
        f.write("# üèãÔ∏è –°–ü–†–ê–í–û–ß–ù–ò–ö –£–ü–†–ê–ñ–ù–ï–ù–ò–ô –î–õ–Ø AI\n\n")
        f.write(f"**–í—Å–µ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:** {len(all_slugs)}\n\n")
        
        for category, exercises in categories.items():
            f.write(f"## {category} ({len(exercises)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π)\n\n")
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 6 –≤ —Å—Ç—Ä–æ–∫–µ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
            for i in range(0, len(exercises), 6):
                chunk = exercises[i:i+6]
                f.write("- " + ", ".join(f"`{ex}`" for ex in chunk) + "\n")
            f.write("\n")
        
        # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
        categorized = set()
        for exercises in categories.values():
            categorized.update(exercises)
        
        other_exercises = [s for s in all_slugs if s not in categorized]
        if other_exercises:
            f.write(f"## –î—Ä—É–≥–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è ({len(other_exercises)})\n\n")
            for i in range(0, len(other_exercises), 6):
                chunk = other_exercises[i:i+6]
                f.write("- " + ", ".join(f"`{ex}`" for ex in chunk) + "\n")
    
    print(f"\nüìÑ –°–æ–∑–¥–∞–Ω —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫: EXERCISE_CATEGORIES.md")
    
    print("\n" + "=" * 60)
    print("‚úÖ –ü–û–õ–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   üéØ AI —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫: {len(all_slugs)} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º")
    print(f"   üìÅ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(prompt_files)}")
    print(f"   üìã –°–æ–∑–¥–∞–Ω —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
    
    print(f"\nüéØ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:")
    print("   üé® –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –ø–ª–∞–Ω–æ–≤")
    print("   üéØ AI –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
    print("   üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—Å–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤–∏–¥–µ–æ")
    print("   üîÑ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è AI ‚Üî –í–∏–¥–µ–æ")

if __name__ == "__main__":
    main()